# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: ""
  endpoints:
    create:
      path: /works.create
      method: POST
      docs: |
        Creates new work ([issue](https://devrev.ai/docs/product/build),
        [ticket](https://devrev.ai/docs/product/support)) item.
      request: works-create-request
      response: works-create-response

    delete:
      path: /works.delete
      method: POST
      docs: Deletes a work item.
      request: works-delete-request
      response: works-delete-response

    export:
      path: /works.export
      method: GET
      docs: Exports a collection of work items.
      request:
        name: works-export-request
        query-parameters:
          applies_to_part: 
            docs: > 
              Filters for work belonging to any of the provided parts.
            type: optional<string>
            allow-multiple: true
          created_by: 
            docs: > 
              Filters for work created by any of these users.
            type: optional<string>
            allow-multiple: true
          first:
            docs: >
              The number of work items to return. The default is '50', the
              maximum
              is '5000'.
            type: optional<integer>
          issue.priority: 
            docs: | 
              Filters for issues with any of the provided priorities.
            type: optional<issue-priority>
            allow-multiple: true
          owned_by: 
            docs: | 
              Filters for work owned by any of these users.
            type: optional<string>
            allow-multiple: true       
          stage.name: 
            docs: | 
              Filters for records in the provided stage(s).
            type: optional<string>
            allow-multiple: true           
          target_close_date.after:
            docs: >
              Filters for objects created after the provided timestamp
              (inclusive).
            type: optional<string>
          target_close_date.before:
            docs: |
              Filters for objects created before the provided timestamp
              (inclusive).
            type: optional<string>
          ticket.rev_org: 
            docs: |
              Filters for tickets that are associated with any of the provided Rev
              organizations.
            type: optional<string>
            allow-multiple: true 
          ticket.severity: 
            docs: |
              Filters for tickets with any of the provided severities.
            type: optional<ticket-severity>
            allow-multiple: true      
          type: 
            docs: Filters for work of the provided types.
            type: optional<work-type>
            allow-multiple: true      
      response: works-export-response

    get:
      path: /works.get
      method: GET
      docs: Gets a work item's information.
      request:
        name: works-get-request
        query-parameters:
          id:
            docs: The work's ID.
            type: string
      response: works-get-response

    list:
      path: /works.list
      method: GET
      docs: Lists a collection of work items.
      request:
        name: works-list-request
        query-parameters:
          applies_to_part: 
            docs: > 
              Filters for work belonging to any of the provided parts.
            type: optional<string>
            allow-multiple: true
          created_by: 
            docs: > 
              Filters for work created by any of these users.
            type: optional<string>
            allow-multiple: true
          cursor:
            docs: >
              The cursor to resume iteration from. If not provided, then
              iteration
              starts from the beginning.
            type: optional<string>
          issue.priority: 
            docs: | 
              Filters for issues with any of the provided priorities.
            type: optional<issue-priority>
            allow-multiple: true
          limit:
            docs: |
              The maximum number of works to return. The default is '50'.
            type: optional<integer>
          mode:
            docs: |
              The iteration mode to use, otherwise if not set, then "after" is
              used.
            type: optional<commons.list-mode>
          owned_by: 
            docs: | 
              Filters for work owned by any of these users.
            type: optional<string>
            allow-multiple: true       
          stage.name: 
            docs: | 
              Filters for records in the provided stage(s).
            type: optional<string>
            allow-multiple: true    
          target_close_date.after:
            docs: >
              Filters for objects created after the provided timestamp
              (inclusive).
            type: optional<string>
          target_close_date.before:
            docs: |
              Filters for objects created before the provided timestamp
              (inclusive).
            type: optional<string>
          ticket.rev_org: 
            docs: |
              Filters for tickets that are associated with any of the provided Rev
              organizations.
            type: optional<string>
            allow-multiple: true 
          ticket.severity: 
            docs: |
              Filters for tickets with any of the provided severities.
            type: optional<ticket-severity>
            allow-multiple: true      
          type: 
            docs: Filters for work of the provided types.
            type: optional<work-type>
            allow-multiple: true              
      response: works-list-response

    update:
      path: /works.update
      method: POST
      docs: Updates a work item's information.
      request: works-update-request
      response: works-update-response

types:
  works-create-request:
    base-properties:
      applies_to_part:
        docs: |
          The [part](https://devrev.ai/docs/product/parts) that the work
          applies to. Specifying a part is required when creating tickets and
          issues.
        type: string
      artifacts:
        docs: |
          The IDs of the artifacts to associate with the work item.
        type: optional<list<string>>
      body:
        docs: Body of the work object.
        type: optional<string>
      owned_by:
        docs: The users that own the work.
        type: list<string>
      reported_by:
        docs: The users that reported the work.
        type: optional<list<string>>
      stage: optional<stage-init>
      tags:
        docs: Tags associated with the work item.
        type: optional<list<set-tag-with-value>>
      target_close_date:
        docs: Timestamp for when the work is expected to be complete.
        type: optional<string>
      title:
        docs: Title of the work object.
        type: string
    union: 
      issue: works-create-request-issue
      ticket: works-create-request-ticket

  works-create-response:
    properties:
      work: work

  stage-init:
    docs: Sets an object's initial stage.
    properties:
      name:
        docs: The name of the stage.
        type: string

  set-tag-with-value:
    properties:
      id:
        docs: The ID of the tag.
        type: string
      value:
        docs: |
          The value for the object's association with the tag. If specified,
          the value must be one that's specified in the tag's allowed values.
        type: optional<string>

  work-type:
    enum:
      - issue
      - ticket

  works-create-request-issue:
    properties:
      priority: optional<issue-priority>

  issue-priority:
    docs: Priority of the work based upon impact and criticality.
    enum:
      - p0
      - p1
      - p2
      - p3

  works-create-request-ticket:
    properties:
      rev_org:
        docs: The Rev organization that the ticket is associated with.
        type: optional<string>
      severity: optional<ticket-severity>

  ticket-severity:
    docs: Severity of the ticket.
    enum:
      - blocker
      - high
      - low
      - medium

  work:
    union:
      issue: issue
      ticket: ticket

  issue:
    extends:
      - work-base
    properties:
      priority: optional<issue-priority>

  work-base:
    extends:
      - commons.atom-base
    properties:
      applies_to_part: optional<part-summary>
      artifacts:
        docs: The artifacts attached to the work item.
        type: optional<list<commons.artifact-summary>>
      body:
        docs: Body of the work object.
        type: optional<string>
      owned_by:
        docs: The users that own the work.
        type: list<commons.user-summary>
      reported_by:
        docs: Users that reported the work.
        type: optional<list<commons.user-summary>>
      stage: optional<commons.stage>
      tags:
        docs: Tags associated with the object.
        type: optional<list<commons.tag-with-value>>
      target_close_date:
        docs: Timestamp when the work is expected to be complete.
        type: optional<string>
      title:
        docs: Title of the work object.
        type: string

  part-summary:
    union:
      product: product-summary

  product-summary:
    extends:
      - part-base-summary

  part-base-summary:
    extends:
      - commons.atom-base-summary
    properties:
      name:
        docs: Name of the part.
        type: optional<string>

  ticket:
    extends:
      - work-base
    properties:
      rev_org: optional<commons.org-summary>
      severity: optional<ticket-severity>

  works-delete-request:
    properties:
      id:
        docs: The work's ID.
        type: string

  works-delete-response: map<string, unknown>

  works-export-response:
    properties:
      works:
        docs: The resulting collection of work items.
        type: list<work>

  works-get-response:
    properties:
      work: work

  works-list-response:
    properties:
      next_cursor:
        docs: |
          The cursor used to iterate subsequent results in accordance to the
          sort order. If not set, then no later elements exist.
        type: optional<string>
      prev_cursor:
        docs: |
          The cursor used to iterate preceding results in accordance to the
          sort order. If not set, then no prior elements exist.
        type: optional<string>
      works:
        docs: The list of works.
        type: list<work>

  works-update-request:
    base-properties:
      applies_to_part:
        docs: Updates the part that the work applies to.
        type: optional<string>
      artifacts: optional<works-update-request-artifact-ids>
      body:
        docs: |
          Updated body of the work object, or unchanged if not provided.
        type: optional<string>
      custom_schema_fragments:
        docs: The custom schema fragments to use.
        type: optional<list<string>>
      id:
        docs: The work's ID.
        type: string
      owned_by: optional<works-update-request-owned-by>
      reported_by: optional<works-update-request-reported-by>
      stage: optional<stage-update>
      tags: optional<works-update-request-tags>
      target_close_date:
        docs: |
          Updates the timestamp for when the work is expected to be complete.
        type: optional<string>
      title:
        docs: |
          Updated title of the work object, or unchanged if not provided.
        type: optional<string>
    union: 
      issue: works-update-request-issue
      none: {}
      ticket: works-update-request-ticket

  works-update-response:
    properties:
      work: work

  works-update-request-artifact-ids:
    properties:
      set:
        docs: Sets the IDs to the provided artifact IDs.
        type: optional<list<string>>

  works-update-request-owned-by:
    properties:
      set:
        docs: |
          Sets the owner IDs to the provided user IDs. This must not be
          empty.
        type: optional<list<string>>

  works-update-request-reported-by:
    properties:
      set:
        docs: |
          Sets the users that reported the work to the provided user IDs.
        type: optional<list<string>>

  stage-update:
    docs: Updates an object's stage.
    properties:
      name:
        docs: |
          The updated name of the stage, otherwise unchanged if not set.
        type: optional<string>

  works-update-request-tags:
    properties:
      set:
        docs: Sets the provided tags on the work item.
        type: optional<list<set-tag-with-value>>

  works-update-request-issue:
    properties:
      priority: optional<issue-priority>

  works-update-request-ticket:
    properties:
      rev_org:
        docs: |
          Updates the Rev organization that the ticket is associated with.
        type: optional<string>
      severity: optional<ticket-severity>
