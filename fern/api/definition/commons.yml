# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  atom-base:
    properties:
      created_by: optional<user-summary>
      created_date:
        docs: Timestamp when the object was created.
        type: optional<datetime>
      display_id:
        docs: Human-readable object ID unique to the Dev organization.
        type: optional<string>
      id:
        docs: Globally unique object ID.
        type: string
      modified_by: optional<user-summary>
      modified_date:
        docs: Timestamp when the object was last modified.
        type: optional<datetime>

  user-summary:
    union: 
      dev_user: dev-user-summary
      rev_user: rev-user-summary
      sys_user: sys-user-summary

  user-type:
    enum:
      - dev_user
      - rev_user
      - sys_user

  dev-user-summary:
    extends:
      - user-base-summary

  user-base-summary:
    extends:
      - atom-base-summary
    properties:
      display_name:
        docs: |
          The user's display name. The name is non-unique and mutable.
        type: optional<string>
      email:
        docs: Email address of the user.
        type: optional<string>
      full_name:
        docs: Full name of the user.
        type: optional<string>
      profile_picture:
        docs: URL of the user's profile picture.
        type: optional<string>
      state: optional<user-state>

  atom-base-summary:
    properties:
      display_id:
        docs: Human-readable object ID unique to the Dev organization.
        type: optional<string>
      id:
        docs: Globally unique object ID.
        type: string

  user-state:
    docs: State of the user.
    enum:
      - active
      - deactivated
      - locked
      - shadow
      - unassigned

  rev-user-summary:
    extends:
      - user-base-summary
    properties:
      rev_org: optional<org-summary>

  org-summary:
    union: 
      rev_org: rev-org-summary

  org-type:
    enum:
      - rev_org

  rev-org-summary:
    extends:
      - org-base-summary

  org-base-summary:
    extends:
      - atom-base-summary
    properties:
      display_name:
        docs: Name of the Organization.
        type: optional<string>

  sys-user-summary:
    extends:
      - user-base-summary

  list-mode:
    docs: |
      The iteration mode to use. If "after", then entries after the provided
      cursor will be returned, or if no cursor is provided, then from the
      beginning. If "before", then entries before the provided cursor will be
      returned, or if no cursor is provided, then from the end. Entries will
      always be returned in the specified sort-by order.
    enum:
      - after
      - before

  part-type:
    enum:
      - product

  artifact-summary:
    extends:
      - atom-base-summary

  stage:
    docs: Describes the current stage of a work item.
    properties:
      name:
        docs: Current stage name of the work item.
        type: string

  tag-with-value:
    properties:
      tag: tag-summary
      value:
        docs: The value for the object's association with the tag.
        type: optional<string>

  tag-summary:
    extends:
      - atom-base-summary
    properties:
      name:
        docs: |
          The name of the tag, which denotes the logical concept by which all
          tagged objects will be associated. The name is guaranteed to be
          unique.
        type: string

  bad-request-error-body: 
    base-properties:
      message:
        docs: The message associated with the error.
        type: optional<string>
    union: 
      bad_request: {}
      missing_required_field: missing-required-field-body
      parse_error: parse-error-body
  
  missing-required-field-body: 
    properties: 
      field_name: 
        type: string
        docs: The missing field's name.
  
  parse-error-body:
    properties: {}

  unauthorized-error-body: 
    base-properties:
      message:
        docs: The message associated with the error.
        type: optional<string>
    union: 
      unauthenticated: {} 
  
  forbidden-error-body: 
    base-properties:
      message:
        docs: The message associated with the error.
        type: optional<string>
    union: 
      forbidden: {} 
  
  not-found-error-body: 
    base-properties:
      message:
        docs: The message associated with the error.
        type: optional<string>
    union: 
      not_found: {}
  
  too-many-requests-error-body: 
    base-properties:
      message:
        docs: The message associated with the error.
        type: optional<string>
      retry_after: 
        docs: The number of seconds after which the client should retry.
        type: optional<integer>
    union: 
      too_many_requests: {}
  
  internal-server-error-error-body: 
    base-properties:
      message:
        docs: The message associated with the error.
        type: optional<string>
      reference_id: 
        docs: A unique ID that's generated for the error that can be used for inquiry.
        type: optional<integer>
    union: 
      internal_error: {}
  
  service-unavailable-error-body: 
    base-properties:
      message:
        docs: The message associated with the error.
        type: optional<string>
    union: 
      service_unavailable: {}

errors: 
  bad-request-error: 
    status-code: 400
    type: bad-request-error-body
  
  unauthorized-error: 
    status-code: 401
    type: unauthorized-error-body
  
  forbidden-error: 
    status-code: 403
    type: forbidden-error-body
  
  not-found-error:
    status-code: 404
    type: not-found-error-body
  
  too-many-requests-error: 
    status-code: 429
    type: too-many-requests-error-body
  
  internal-server-error: 
    status-code: 500
    type: internal-server-error-error-body
  
  service-unavailable-error: 
    status-code: 503
    type: service-unavailable-error-body