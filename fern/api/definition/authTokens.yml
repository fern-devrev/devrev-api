# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml

service:
  auth: true
  base-path: ""
  endpoints:
    create:
      path: /auth-tokens.create
      method: POST
      docs: |
        Creates a JWT corresponding to the requested token type for the
        authenticated user.
      request:
        name: createAuthTokenRequest
        body: auth-tokens-create-request

    delete:
      path: /auth-tokens.delete
      method: POST
      docs: |
        Revokes the token that matches the given token ID issued under the
        given Dev organization.
      request:
        name: revokeAuthTokenRequest
        body: auth-tokens-delete-request

    get:
      path: /auth-tokens.get
      method: GET
      docs: |
        Gets the token metadata corresponding to the given token ID under the
        given Dev organization.
      request:
        name: getAuthTokenRequest
        query-parameters:
          token_id:
            docs: |
              The unique identifier of the token under a given Dev organization.
            type: string
      response: auth-tokens-get-response

    list:
      path: /auth-tokens.list
      method: GET
      docs: |
        Gets the token metadata for all the tokens corresponding to the given
        token type issued for a given subject.
      request:
        name: listAuthTokenRequest
        query-parameters:
          client_id:
            docs: |
              An identifier that represents the application, which requested the
              token. Only relevant for application access tokens.
            type: optional<string>
          requested_token_type:
            docs: |
              The type of the requested token. If no value is specified, the
              response will include tokens of all the types.
            type: optional<commons.auth-token-requested-token-type>
          subject:
            docs: |
              The subject associated with the token. In the absence of this
              parameter, the ID of the authenticated entity is treated as the
              subject.
            type: optional<string>
      response: auth-tokens-list-response

    selfDelete:
      path: /auth-tokens.self.delete
      method: POST
      docs: |
        Revokes all the tokens that matches the given token type created by the
        authenticated user.
      request:
        name: deleteSelfAuthTokenRequest
        body: auth-tokens-self-delete-request

    update:
      path: /auth-tokens.update
      method: POST
      docs: |
        Updates token metadata of a token issued under a given Dev
        organization.
      request:
        name: updateAuthTokenRequest
        body: auth-tokens-update-request
      response: auth-tokens-update-response

types:
  auth-tokens-create-request:
    docs: |
      A request to create a new token corresponding to the requested token
      type.
    properties:
      aud:
        docs: The expected audience values with respect to the token.
        type: optional<list<string>>
      client_id:
        docs: |
          An identifier that represents the application which is requesting
          the token. If no client_id is present in the request to generate an
          application access token (AAT), DevRev will generate a client_id.
          This client_id is only associated with an AAT.
        type: optional<string>
      expires_in:
        docs: |
          The expected validity lifetime of the token in number of days.
        type: optional<integer>
      grant_type: optional<commons.auth-token-grant-type>
      requested_token_type: optional<commons.auth-token-requested-token-type>
      rev_info: optional<commons.auth-tokens-rev-info>
      scope:
        docs: |
          The requested set of scopes associated with the issued token. A
          space-delimited list of values in which the order of values does
          not matter.
        type: optional<string>
      subject_token:
        docs: |
          Represents the entity that requests the token. Not required when
          requesting an application access token (AAT).
        type: optional<string>
      subject_token_type: optional<commons.auth-token-subject-token-type>
      token_hint:
        docs: A hint that identifies the token.
        type: optional<string>

  auth-tokens-create-response:
    docs: |
      Response for the request to create a new token corresponding to the
      requested token type.
    properties:
      access_token:
        docs: |
          The issued JSON Web Token (JWT) corresponding to the requested
          token type.
        type: string
      client_id:
        docs: |
          An identifier that represents the application which is requesting
          the token. Only present in a response corresponding to an
          application access token (AAT).
        type: optional<string>
      expires_in:
        docs: |
          The validity lifetime of the token specified in seconds since Unix
          epoch.
        type: integer
      refresh_token:
        docs: A token to refresh the issued token.
        type: optional<string>
      scope:
        docs: |
          The scopes associated with the issued token. A space-delimited list
          of values in which the order of values does not matter.
        type: optional<string>
      token_type: commons.auth-token-token-type

  auth-tokens-delete-request:
    docs: The request to revoke the token.
    properties:
      token_id:
        docs: |
          The unique identifier for the token under a given Dev organization.
          If no token ID is provided, then the token ID will be set from the
          JTI claim of the token in the authorization header.
        type: optional<string>

  auth-tokens-get-response:
    docs: The response to get the token metadata.
    properties:
      token: commons.auth-token

  auth-tokens-list-response:
    docs: The response to list the token metadata.
    properties:
      tokens:
        docs: The list of token metadata.
        type: list<commons.auth-token>

  auth-tokens-self-delete-request:
    docs: |
      The request to delete all the tokens created by the authenticated user,
      that match with the provided token type.
    properties:
      requested_token_type: optional<commons.auth-token-requested-token-type>

  auth-tokens-update-request:
    docs: A request to update the token metadata.
    properties:
      token_hint:
        docs: A hint that identifies the token.
        type: string
      token_id:
        docs: |
          The unique identifier of the token under a given Dev organization.
        type: string

  auth-tokens-update-response:
    docs: Response for the request to update the token metadata.
    properties:
      token: commons.auth-token
